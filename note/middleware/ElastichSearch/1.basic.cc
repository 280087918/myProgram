==================
基础概念
==================
1.文档(Document):存储数据的载体，包含一个或者多个字段，相当于数据库表里面的一行记录。
2.字段(field):文档的一部分，包括字段和值
3.词(term):搜索的基本单位，搜索具体文本里面的一个词
4.标记(token):文本中的词，是一个文本的组成部分，包含词的位置，偏移量等信息

倒排序索引(inverted index):
    可以将这理解为一种数据格式，记录了具体的分割出来的词，词对应出现的次数，词对应的文档等信息

索引:
    具体要进行搜索的文档字段，就叫做索引

段:
    每个索引被物理切分成多个块，就叫做段
    段的特点是写一度，读多次。一个段被写入磁盘之后就不能被更新了。
    我现在理解段就是文档存储的物理存储碎片。
    段越多，返回的结果就越慢，因为结果需要将若干的段合并起来
    反之，段合并成一个大段之后，搜索结果要快很多，因为不需要将很多的段组装起来一个结果

分片(shard):
    每一个索引会有一个或者多个分片，这样索引就会分散在一台或者多台服务器上面
    每个分片可以有多个副本
    分片也有主从只说，如果主分片丢失，那么es会从从分片中挑选一个分片上升为主分片


==================
注意要点
==================
一个文档可能由多个字段组成，重点是，有可能一个字段在一个文档里面出现多词，这个叫做多值字段。
不能简单理解为List，因为字段本身有类似这种类型，所以到目前位置，我还不是特别理解这个多值字段?


每个字段都有类型，不是我原来理解的只有字符串，因为es不仅仅分析文本，还可以进行数据统计、排序。
字段的类型有文本，数值，日期等。
字段也可以是复杂类型，比如字段的值是另一个文档的引用，或者直接就是一个数组。
不同分类，同一个字段其字段类型也必须一致，因为有可能对所有文档进行搜索，这个时候就必须保证字段类型的统一。

文档由文档id和类型进行标识，所以不同的类型可以存在id一样的文档

映射的概念还不是特别理解
映射应该跟字段的类型有关，让es知道如何分析这些字段

操作系统有一个注意的地方，一般系统都会限制打开的文件数，我们要将这个限制放开
因为创建索引，段合并的时候，有可能需要打开很多个分片信息。
如果限制了会导致索引失败，合并失败等灾难性异常。

==================
??疑点，难点??
==================
分片也存储文档信息，那么索引到底只是文档需要搜索的字段还是指的是文档，这个有点模棱两可。