<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	
	<!-- redis pool -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="minIdle">
			<value>${redis.pool.minIdle}</value>
		</property>
		<property name="maxIdle">
			<value>${redis.pool.maxIdle}</value>
		</property>
		<property name="maxWaitMillis">
			<value>${redis.pool.maxWaitMillis}</value>
		</property>
		<property name="testOnBorrow">
			<value>${redis.pool.testOnBorrow}</value>
		</property>
		<property name="testOnReturn">
			<value>${redis.pool.testOnReturn}</value>
		</property>
		<property name="testWhileIdle">
			<value>${redis.pool.testWhileIdle}</value>
		</property>
	</bean>
	
	<!-- redis connectionFactory 单个redis配置
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.master.host}" p:port="${redis.master.port}" p:pool-config-ref="poolConfig"/> -->
    
     <!-- 读写分离(目前还有点问题) -->
     <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0">
			<bean class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
				<property name="master">
					<bean class="org.springframework.data.redis.connection.RedisNode" p:name="${redis.master.name}" c:host="${redis.master.host}" c:port="${redis.master.port}" />
				</property>
				<property name="sentinels">
					<set>
						<bean class="org.springframework.data.redis.connection.RedisNode" c:host="${redis.sentinel1.host}" c:port="${redis.sentinel1.port}" />
					</set>
				</property>
			</bean>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="poolConfig" />
		</constructor-arg>
		<property name="timeout">
			<value>${redis.timeout}</value>
		</property>
		<property name="password">
			<value>${redis.password}</value>
		</property>
	</bean>
    
    <!-- redis template -->
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<ref bean="stringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<ref bean="stringRedisSerializer" />
		</property> 
    </bean>
</beans>