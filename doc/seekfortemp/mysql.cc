读写分离，性能优化，调优，索引策略

1.利用查询缓存
  大多Mysql数据库都开启查询缓存，如果相同的查询被执行了多次，就会走Mysql的缓存。如果使用Mysql内置函数就不会走缓存了
  所以杜绝在语句中使用CURDATE()等函数，使用变量去接收参数

2.模糊匹配走索引
  后置百分号是会走索引的，但是前置%并不会走索引。

3.外键加索引
  如果有一个查询语句，A表的b_id需要join B表的id,那么在A表的b_id上加上索引会加快搜索效率，因为没加之前，用执行计划看主表在执行语句的时候需要更多的rows去匹配

4.使用limit 1加快搜索速度
  在搜索字段不是索引的前提下，如果知道该结果只会有一条，那么就在查询语句后面加上limit 1
  我实验过在3千多行记录里面，加上limit 1会比没有加的查询速度快1毫秒。
  原理是如果查询定位到一条数据之后，就不会再往后匹配数据了

5.不要select *
  养成良好的习惯，用什么字段就写什么字段。

6.索引
  对于少量的数据，没有合适的索引影响不是很大，但是，当随着数据量的增加，性能会急剧下降。
  ALTER TABLE `table_name` ADD INDEX index_name (`column`);

7.